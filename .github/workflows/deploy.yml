# .github/workflows/deploy.yml

name: Deploy Django Financial App to EC2

# Controls when the workflow will run
on:
  push:
    branches: [ master ] # Trigger on pushes to the master branch

jobs:
  deploy:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner provided by GitHub

    steps:
    # Step 1: Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12' # Match the Python version on your EC2 instance

    # Step 3: Install Python dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Run collectstatic
    - name: Run collectstatic
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
        AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME }} # CRITICAL: Ensure this secret is set correctly in GitHub to your bucket's region (e.g., af-south-1)
        CLOUDFRONT_DOMAIN: ${{ secrets.CLOUDFRONT_DOMAIN }}
        SECRET_KEY: "dummy-secret-key-for-collectstatic"
        DEBUG: "False"
        # Add dummy values for other settings if settings.py prints warnings for them
        ALLOWED_HOSTS: "localhost,fintrackke.com" # Dummy/actual value, not critical for collectstatic logic itself
        CORS_ALLOWED_ORIGINS: "https://fintrackke.com" # Dummy/actual value
        # Ensure all other os.environ.get() calls in settings.py have defaults or are provided
        # if they are evaluated when settings are loaded for collectstatic.
        # For example, database vars are not needed for collectstatic usually.
        # CELERY_SQS_QUEUE_URL: "dummy" # If settings.py tries to read it
        # FIREBASE_SERVICE_ACCOUNT_PATH: "/dev/null" # If settings.py tries to read it
        # GEMINI_API_KEY: "dummy"
      run: |
        echo "Running collectstatic..."
        echo "AWS_S3_REGION_NAME for collectstatic is: $AWS_S3_REGION_NAME" # Debug print
        python manage.py collectstatic --noinput
        echo "Collectstatic finished."

    # Step 5: Configure AWS credentials (for subsequent AWS CLI commands like SSM)
    - name: Configure AWS Credentials for Deployment
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }} # This is for the AWS CLI commands, should match your target region

    # Step 7: Deploy to EC2 using AWS SSM Run Command
    - name: Deploy to EC2
      run: |
        # Define commands as a multi-line string (heredoc)
        COMMANDS_HEREDOC=$(cat <<EOF
        cd /srv/financial-app
        git fetch origin master
        git reset --hard origin/master
        source venv/bin/activate
        pip install -r requirements.txt
        eval \$(python3 load_params.py)
        python3 manage.py migrate --noinput
        sudo systemctl restart gunicorn
        sudo systemctl restart celery-worker
        echo "Deployment completed successfully on EC2"
        EOF
        )

        # Prepare commands for JSON array format
        JSON_PARAMS_PAYLOAD="{\"commands\":["
        FIRST_CMD=true
        while IFS= read -r cmd; do
          if [ "$FIRST_CMD" = true ]; then
            FIRST_CMD=false
          else
            JSON_PARAMS_PAYLOAD="$JSON_PARAMS_PAYLOAD,"
          fi
          ESCAPED_CMD=$(echo "$cmd" | sed 's/\\/\\\\/g' | sed 's/"/\\"/g')
          JSON_PARAMS_PAYLOAD="$JSON_PARAMS_PAYLOAD\"$ESCAPED_CMD\""
        done <<< "$COMMANDS_HEREDOC"
        JSON_PARAMS_PAYLOAD="$JSON_PARAMS_PAYLOAD]}"
        
        echo "Final JSON for SSM: $JSON_PARAMS_PAYLOAD" # For debugging

        # Send commands to EC2 instance via SSM Run Command
        aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --parameters "$JSON_PARAMS_PAYLOAD" \
          --comment "Deploying new version of Financial App via GitHub Actions" \
          --output text
