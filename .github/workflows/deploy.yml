# .github/workflows/deploy.yml

name: Deploy Django Financial App to EC2

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 5: Run collectstatic with high verbosity
    - name: Run collectstatic
      env:
        AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
        AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME }} # Ensure this secret is correct
        CLOUDFRONT_DOMAIN: ${{ secrets.CLOUDFRONT_DOMAIN }}
        SECRET_KEY: "dummy-secret-key-for-collectstatic"
        DEBUG: "False"
        ALLOWED_HOSTS: "localhost,fintrackke.com"
        CORS_ALLOWED_ORIGINS: "https://fintrackke.com"
        # Add other dummy env vars if settings.py requires them on load
      run: |
        echo "Running collectstatic..."
        echo "AWS_S3_REGION_NAME for collectstatic is: $AWS_S3_REGION_NAME"
        python manage.py collectstatic --noinput -v 3 # <-- Increased verbosity
        echo "Collectstatic finished."

    # Step 6: Deploy to EC2 using AWS SSM Run Command
    - name: Deploy to EC2
      run: |
        # Define commands as a multi-line string (heredoc)
        COMMANDS_HEREDOC=$(cat <<EOF
        cd /srv/financial-app
        git fetch origin master
        git reset --hard origin/master
        source venv/bin/activate
        pip install -r requirements.txt
        eval \$(python3 load_params.py)
        python3 manage.py migrate --noinput
        sudo systemctl restart gunicorn
        sudo systemctl restart celery-worker
        echo "Deployment completed successfully on EC2"
        EOF
        )

        # Prepare commands for JSON array format
        JSON_PARAMS_PAYLOAD="{\"commands\":["
        FIRST_CMD=true
        while IFS= read -r cmd; do
          if [ "$FIRST_CMD" = true ]; then
            FIRST_CMD=false
          else
            JSON_PARAMS_PAYLOAD="$JSON_PARAMS_PAYLOAD,"
          fi
          ESCAPED_CMD=$(echo "$cmd" | sed 's/\\/\\\\/g' | sed 's/"/\\"/g')
          JSON_PARAMS_PAYLOAD="$JSON_PARAMS_PAYLOAD\"$ESCAPED_CMD\""
        done <<< "$COMMANDS_HEREDOC"
        JSON_PARAMS_PAYLOAD="$JSON_PARAMS_PAYLOAD]}"

        echo "Final JSON for SSM: $JSON_PARAMS_PAYLOAD" # For debugging

        # Send commands to EC2 instance via SSM Run Command
        aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --parameters "$JSON_PARAMS_PAYLOAD" \
          --comment "Deploying new version of Financial App via GitHub Actions" \
          --output text
